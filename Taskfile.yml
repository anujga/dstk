version: '2'

vars:
  EXE: app{{exeExt}}

  JS_FILES:
    assets/js/vendor/jquery.js
    assets/js/main.js

  CSS_FILES:
    assets/css/vendor/reboot.css
    assets/css/main.css

  PROTO_FILES: api/protobuf-spec/*.proto
  PROTO_PATH: api/protobuf-spec/
  PROTO_OUT_DIR: pkg/api/proto/

tasks:
  default:
    cmds:
      - task: local

  os-deps:
    cmds:
      - echo "unknown os {{.GOOS}}"



  protos:
    desc: compile protobuf files
    cmds:
      - protoc {{.PROTO_FILES}} --proto_path={{.PROTO_PATH}} --go_out=plugins=grpc:{{.PROTO_OUT_DIR}}

  docker:
    desc: Build docker
    cmds:
      - ./scripts/docker.sh deploy/Dockerfile

  se:
    desc: Build and run SE
    cmds:
      - go run ./cmd/se --conf=cmd/se/conf

  dc-clean:
    desc: Build and run Disk Cache
    cmds:
      - go run ./cmd/disk-cache --conf=cmd/disk-cache/config.yaml --clean-db=true

  dc-verify:
    desc: Verify Disk Cache
    cmds:
      - go run ./cmd/disk-cache --verify=true --conf=cmd/disk-cache/verify-config.yaml

  apps:
    deps:
      - protos
    cmds:
      - task: app-local

  local:
    deps:
      - local-monitor
    cmds:
      - task: app
        vars:
          EXE: se

      - task: app
        vars:
          EXE: disk-cache

      - scripts/docker.sh deploy/Dockerfile-local

  local-monitor:
    cmds:
      - docker-compose -f scripts/docker-compose.yaml up

  app:
    desc: Build the app
    vars:
      GIT_COMMIT:
        sh: git log -n 1 --format=%h
    cmds:
      - go build -o bin/{{.EXE}} -ldflags="-X main.Version={{.GIT_COMMIT}}" ./cmd/{{.EXE}}/

  test:
    cmds:
      - go test ./...

  load-test:
    cmds:
      - goreman -f cmd/disk-cache/Procfile start

  dl-deps:
    desc: Install tools required to build this app
    deps:
      - os-deps
    cmds:
      - task: go-get
        vars: {REPO: github.com/golang/protobuf/protoc-gen-go@v1.4.2}
      - task: go-get
        vars: {REPO: github.com/mattn/goreman@v0.3.5}

  go-get:
    cmds:
      - go get -u {{.REPO}}