syntax = "proto3";
package dstk;

import "common.proto";

// Used by thick client to refresh list of global partitions
// Currently support full snapshot. Push api can be added later
service SeClientApi {
    rpc AllParts (AllPartsReq) returns (PartList);
}

message AllPartsReq {
    // unused
    string client_id = 1;
}

message PartList {
    repeated Partition parts = 1;
    int64 last_modified = 2;
}

// Used by workers to refresh the list of partitions that
// it needs to process
// Currently support full snapshot. Push api can be added later
service SeWorkerApi {
    rpc MyParts (MyPartsReq) returns (PartList);
}

message MyPartsReq {
    int64 worker_id = 1;
}

// User by assigner to manipulate partitions
service ShardStorage {
    rpc CreateJobPartition (CreateJobPartReq) returns (ChangeRes);
    rpc SplitPartition (SplitReq) returns (ChangeRes);
    rpc MergePartition (MergeReq) returns (ChangeRes);

    //todo: this should move to ClientAPI
    rpc GetDeltaPartitions (Delta.Req) returns (Delta.Res);
}


message ChangeRes {
    Ex ex = 1;
    bool success = 2;
}

message CreateJobPartReq {
    int64 jobId = 1;
    repeated bytes markings = 2;
}

message SplitReq {
    int64 jobId = 1;
    bytes marking = 2;
}

message MergeReq {
    int64 jobId = 1;
    Partition c1 = 2;
    Partition c2 = 3;
}

message Delta {
    message Req {
        int64 jobId = 1;
        int64 fromTime = 2;
        bool activeOnly = 3;
    }
    message Res {
        Ex ex = 1;
        repeated Partition added = 2;
        repeated Partition removed = 3;
    }
}
